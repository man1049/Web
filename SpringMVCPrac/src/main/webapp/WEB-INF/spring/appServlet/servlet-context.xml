<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!--  /exception 요청이 오면 input 이라는 뷰 이름을 린턴하도록 설정 -->
	<view-controller path="/exception" view-name="input"/>	
	<!--  itemreport 라는 View 이름이 전달 된 경우 list 라는 데이터를 XML로 출력하는 요청을 처리하는 뷰 설정 -->
	<beans:bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller" id="marshaller">
		<beans:property name="classesToBeBound">
			<beans:list>
				<beans:value>
					kr.co.prac.domain.ItemReport
				</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.xml.MarshallingView" id="itemreport">
		<beans:property name="marshaller" ref="marshaller"/>
		<beans:property name="modelKey" value="list"/>
	</beans:bean>
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1"/>
	</beans:bean>
	<!-- View 이름을 가지고 직접 View를 선택 할 수 있도록 해주는 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>
	</beans:bean>
	
	<!-- 뷰 이름이 왔을 때 출력하도록 해주는 설정 -->
	<beans:bean id="download" class="kr.co.prac.view.DownloadView"/>
	<beans:bean id="excel" class="kr.co.prac.view.ExcelView" />
	<beans:bean id="pdf" class="kr.co.prac.view.PdfView"/>
	<beans:bean id="json" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	
	<context:component-scan base-package="kr.co.prac" />
	
	<!-- web.xml 파일에서 서블릿 설정은 /*, / 디렉토리 패턴을 사용하는 경우
	확장자가 css 나 js 등도 Controller가 처리하려고 하기 때문에
	정적 자원의 링크를 Controller 처리 해 주지 않으면 404 에러가 발생-->
	<!-- Spring의 Controller가 처리하지 못하는 요청은 WAS가 처리하도록 해주는 핸들러 -->
	
	<default-servlet-handler/>
	
	<!-- Hibernate의 트랜잭션 매니저 
	여기에 작성했는데 에러가 날 때는 servlet-context.xml로 옮기면 되는 경우가 있음-->
	<beans:bean
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		id="transactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

	<!-- annotation을 이용해서 트랜잭션을 사용 할 수 있도록 해주는 설정 -->
	<tx:annotation-driven />
	
	
	<!-- 메시지 파일 설정 -->
	<beans:bean class="org.springframework.context.support.ResourceBundleMessageSource" id="messageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>message/label</beans:value>
				<beans:value>message/validation</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 파일 업로드를 위한 bean 설정 -->
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"></beans:bean>


</beans:beans>
