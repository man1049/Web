<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	
	<!-- 자바 파일에서 사용한 annotation 설정을 여기서도 사용 할 수 있게 해주는 설정 -->
	<annotation-driven />

	<!-- /resources로 시작하는 자원에 대한 요청은
	src/main/webapp/resources 디렉토리의 자원을 사용합니다.
	이 설정을 해주면 자원을 사용 할 때 캐싱을 합니다. 캐싱 시간도 설정 할 수 있음 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Controller에서 forwarding 하는 뷰 이름을 리턴했을 때
	실제 출력 할 뷰를 결정하기 위해서 앞이나 뒤의 공통 된 설정을 생성 
	생략 할 수도 있고 다른 ViewResolver를 추가 할 수도 있음-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 어노테이션이 붙은 클래스의 빈을 자동생성해주는 패키지설정
	,를 하고 다른 패키지를 추가 할 수 있음 -->
	<context:component-scan base-package="kr.co.backsan" />
	
	
	
</beans:beans>
